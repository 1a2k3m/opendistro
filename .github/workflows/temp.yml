name: Test PA

on:
  push:
    branches:
      - pa-test

jobs:
  Test-PA-NoSec:
    runs-on: [ubuntu-18.04]
    name: Test-PA-NoSec
    strategy:
      matrix:
        java: [14]
    steps:
      - name: Set up Java
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java }}
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Checkout opendistro-build
        uses: actions/checkout@v1
      - name: Required Packages
        run: ./release-tools/scripts/required_packages.sh
      - name: Find PA and RCA tags
        run: |
          echo "pa_tag=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/performance-analyzer)" >> $GITHUB_ENV
          echo "rca_tag=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/performance-analyzer-rca)" >> $GITHUB_ENV
      - name: Checkout RCA package
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/performance-analyzer-rca
          path: ./tmp/rca
      - name: Checkout Performance Analyzer package
        uses: actions/checkout@v2
        with:
          repository: opendistro-for-elasticsearch/performance-analyzer
          path: ./tmp/pa
      - name: Build RCA with Gradle
        working-directory:  ./tmp/rca
        run: ./gradlew build -x test
      - name: Publish RCA jar to maven local
        working-directory: ./tmp/rca
        run: ./gradlew publishToMavenLocal
      - name: Build PA gradle using the new RCA jar
        working-directory: ./tmp/pa
        run: |
          ls -l
          rm licenses/performanceanalyzer-rca-1.13.jar.sha1
      - name: Update SHA
        working-directory: ./tmp/pa
        run: ./gradlew updateShas
      - name: Run IT
        run: |
          release-tools/scripts/setup_runners_service.sh deb --es-nosec
          export PATH=$JAVA_HOME:$PATH; cd ${GITHUB_WORKSPACE}/tmp/pa
          curl -sS  "localhost:9200/_cat/nodes?h=heap*&v"
          # echo "Enable PA"
          # curl -XPOST localhost:9200/_opendistro/_performanceanalyzer/cluster/config -H 'Content-Type: application/json' -d '{"enabled": true}'
          # echo "Enable RCA"
          # curl -XPOST localhost:9200/_opendistro/_performanceanalyzer/rca/cluster/config -H 'Content-Type: application/json' -d '{"enabled": true}'
          echo "Check ports again"
          netstat -ntlp
          echo "Starting tests"
          ./gradlew integTest -Dtests.enableIT=true -Dtests.useDockerCluster=false -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9300

  # Test-PA-NoSec:
  #   runs-on: [ubuntu-18.04]
  #   name: Test-PA-NoSec
  #   strategy:
  #     matrix:
  #       java: [14]
  #   steps:
  #     - name: Set up Java
  #       uses: actions/setup-java@v1
  #       with:
  #         java-version: ${{ matrix.java }}
  #     - name: Set up AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v1
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: us-east-1
  #     - name: Checkout opendistro-build
  #       uses: actions/checkout@v1
  #     - name: Required Packages
  #       run: ./release-tools/scripts/required_packages.sh
  #     - name: Find PA and RCA tags
  #       run: |
  #         echo "pa_tag=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/performance-analyzer)" >> $GITHUB_ENV
  #         echo "rca_tag=$(release-tools/scripts/plugin_tag.sh opendistro-for-elasticsearch/performance-analyzer-rca)" >> $GITHUB_ENV
  #     - name: Checkout RCA package
  #       uses: actions/checkout@v2
  #       with:
  #         repository: opendistro-for-elasticsearch/performance-analyzer-rca
  #         path: ./tmp/rca
  #     - name: Checkout Performance Analyzer package
  #       uses: actions/checkout@v2
  #       with:
  #         repository: opendistro-for-elasticsearch/performance-analyzer
  #         path: ./tmp/pa
  #     - name: Build RCA with Gradle
  #       working-directory:  ./tmp/rca
  #       run: ./gradlew build -x test
  #     - name: Publish RCA jar to maven local
  #       working-directory: ./tmp/rca
  #       run: ./gradlew publishToMavenLocal
  #     - name: Build PA gradle using the new RCA jar
  #       working-directory: ./tmp/pa
  #       run: |
  #         ls -l
  #         rm licenses/performanceanalyzer-rca-1.13.jar.sha1
  #     - name: Update SHA
  #       working-directory: ./tmp/pa
  #       run: ./gradlew updateShas
  #     - name: Set up PA
  #       run: |
  #         release-tools/scripts/setup_runners_service.sh docker --es-nosec
  #         # docker_id=`docker ps | grep no-security | awk '{print $1}'`
  #         # echo $docker_id
  #         # echo "Activating PA"
  #         # docker exec -it $docker_id /bin/bash
  #         curl -sS  "localhost:9200/_cat/nodes?h=heap*&v"
  #         echo "Enable PA"
  #         curl -XPOST localhost:9200/_opendistro/_performanceanalyzer/cluster/config -H 'Content-Type: application/json' -d '{"enabled": true}'
  #         echo "Enable RCA"
  #         curl -XPOST localhost:9200/_opendistro/_performanceanalyzer/rca/cluster/config -H 'Content-Type: application/json' -d '{"enabled": true}'
  #         netstat

  #     - name: Run IT
  #       run: |
  #         export PATH=$JAVA_HOME:$PATH; cd ${GITHUB_WORKSPACE}/tmp/pa
  #         echo "Starting tests"
  #         ./gradlew integTest -Dtests.enableIT=true -Dtests.useDockerCluster=false -Dtests.rest.cluster=localhost:9200 -Dtests.cluster=localhost:9300
