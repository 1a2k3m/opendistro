name: Build TAR, DEB and RPM

on:
  push:
    branches: 
      - master
jobs:
  build-es-artifacts:
    name: Build ES Artifacts
    runs-on: ubuntu-latest
    #container:
      #image: opendistroforelasticsearch/multijava08101112-git:v1

    steps:
    - uses: actions/checkout@v1
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    - name: Build tar, deb and rpm
      run: |
        #!/bin/bash -x
        set -e
        set -u
        export JAVA_HOME=/openjdk12
        export PATH=$JAVA_HOME:$PATH
        cd elasticsearch/linux_distributions
        #./gradlew buildDeb buildRpm --console=plain -Dbuild.snapshot=false -b ./build.gradle
        #./opendistro-tar-build.sh
        #tar_artifact=`ls tarfiles/*.tar.gz`
        #tar_checksum_artifact=`ls tarfiles/*.tar.gz.sha512`
        #rpm_artifact=`ls build/distributions/*.rpm`
        #deb_artifact=`ls build/distributions/*.deb`
        #aws s3 cp $rpm_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/rpms/opendistro-elasticsearch/
        #aws s3 cp $deb_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/debs/opendistro-elasticsearch/
        #aws s3 cp $tar_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistro-elasticsearch/
        #aws s3 cp $tar_checksum_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistro-elasticsearch/
        #aws cloudfront create-invalidation --distribution-id E1VG5HMIWI4SA2 --paths "/downloads/*"
        echo "DEB, RPM and TAR creation for ES completed"
        
  build-kibana-artifacts:
    needs: [build-es-artifacts]
    name: Build Kibana Artifacts
    runs-on: [ubuntu-latest]
    #container:
        #image: mayhem6788/jsenv:v3
    steps:
      - uses: actions/checkout@v1
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Build Kibana tar, deb and rpm
        run: |
          #!/bin/bash -x
          cd kibana/linux_distributions 
          #sh generate-pkg.sh
          #rpm_artifact=`ls target/*.rpm`
          #deb_artifact=`ls target/*.deb`
          #tar_artifact=`ls target/*.tar.gz`
          #tar_checksum_artifact=`ls target/*.tar.gz.sha512`
          #aws s3 cp $rpm_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/rpms/opendistroforelasticsearch-kibana/
          #aws s3 cp $deb_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/debs/opendistroforelasticsearch-kibana/
          #aws s3 cp $tar_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistroforelasticsearch-kibana/
          #aws s3 cp $tar_checksum_artifact s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/tarball/opendistroforelasticsearch-kibana/
          
  sign-deb-artifacts:
    #needs: [build-es-artifacts, build-kibana-artifacts]
    runs-on: [ubuntu-latest]
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Sign Deb Artifacts
        env:
          passphrase: ${{ secrets.PASSPHRASE }}
        run: |
          #!/bin/bash -x

          echo "deb http://repo.aptly.info/ squeeze main" | sudo tee -a /etc/apt/sources.list.d/aptly.list
          sudo apt-get install -y gnupg1
          sudo apt install -y gpgv1
          alias gpg=gpg1
          

          sudo apt-get update -y
          #sudo apt-get install -y aptly
          aws s3 cp s3://opendistro-docs/github-actions/pgp-public-key .
          aws s3 cp s3://opendistro-docs/github-actions/pgp-private-key .
          
          #aptly repo create -distribution=stable -component=main odfe-release
          
          #mkdir -p downloads/debs
          #aws s3 sync s3://artifacts.opendistroforelasticsearch.amazon.com/downloads/debs downloads/debs
          #aptly repo add odfe-release downloads
          
          #aptly repo show -with-packages odfe-release
          #aptly snapshot create opendistroforelasticsearch from repo odfe-release
          #aptly snapshot list
          
          sudo apt-key adv --keyserver pool.sks-keyservers.net --recv-keys ED75B5A4483DA07C
          gpg --import pgp-public-key
          gpg --keyring secring.gpg --allow-secret-key-import --import --batch --yes pgp-private-key
          echo "Printing Secret List"
          ls -ltr /home/runner/.gnupg/
          #gpg --list-secret
          
          #echo $passphrase | aptly publish snapshot -batch=true opendistroforelasticsearch




